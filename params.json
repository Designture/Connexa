{"name":"Connexa","tagline":"A library which aims create an abstraction to the WebSockets in Dart.","body":"## How to use\r\n\r\n### Installing\r\n\r\nFirst, add the library to the list of dependencies in your **pubspec.yaml** file:\r\n\r\n```yaml\r\ndependencies:\r\n  connexa: any\r\n```\r\n\r\n### Create a simple server\r\n\r\n#### server.dart\r\n\r\n```dart\r\nimport 'package:connexa/connexa.dart';\r\n\r\nmain() {\r\n  Connexa.listen().then((Server server) {\r\n    server.on('connection', (Socket socket) {\r\n      socket.emit('news', {'title': 'Hello!'});\r\n      socket.on('my_event', (data) {\r\n        print(data);\r\n      });\r\n    });\r\n  });\r\n}\r\n```\r\n\r\n```dart\r\nimport 'package:connexa/connexa.dart';\r\n\r\nmain() {\r\n  Connexa.connect('http://localhost:8080').then((socket) {\r\n    socket.on('news', (data) {\r\n      print(data);\r\n      socket.emit('my_event', {'some': 'data'});\r\n    })\r\n  });\r\n}\r\n```\r\n\r\n## Sending and receiving events\r\nConnexa allows you to emit and receive custom events. Besides `connect`, `message`, `disconnect`, you can emit custom events:\r\n\r\n### Server\r\n\r\n```dart\r\n// note, listen(<options>) will create a http server for you\r\n// if you want serve in IPv6 please use listenV6(<options>) instead\r\nServer server = await Connexa.listen();\r\n\r\nserver.on('connection', (socket) {\r\n  server.emit('this', { 'will': 'be received by everyone' });\r\n\r\n  socket.on('private_message', (from, msg) {\r\n    print('I received a private message by ' + from + ' saying ' + msg);\r\n  });\r\n\r\n  socket.on('disconnect', (_) {\r\n    server.emit('user disconnected');\r\n  });\r\n});\r\n```","google":"UA-67394550-1","note":"Don't delete this file! It's used internally to help with page regeneration."}